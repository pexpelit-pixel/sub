name: Subtitle Pipeline

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq curl python3 python3-pip
          pip3 install requests

      - name: Process videos
        run: |
          mkdir -p outputs subs
          while read -r url; do
            fname=$(basename "$url")
            base="${fname%.*}"

            echo "⬇️ Downloading $fname..."
            curl -L -o "$fname" "$url"

            echo "🎵 Extracting & compressing audio..."
            ffmpeg -i "$fname" -vn -ar 16000 -ac 1 -b:a 64k "${base}.mp3"

            echo "📝 Transcribing with Whisper API..."
            curl "https://api.groq.com/openai/v1/audio/transcriptions" \
              -H "Authorization: Bearer ${{ secrets.GROQ_API_KEY }}" \
              -F "model=whisper-large-v3-turbo" \
              -F "file=@${base}.mp3" \
              -F "response_format=verbose_json" \
              -F "timestamp_granularities[]=segment" \
              -o "${base}.json"

            echo "📄 Converting JSON → SRT (JP)..."
            python3 transcribe.py "${base}.json" "subs/${base}.ja.srt"

            echo "🌍 Translating to English..."
            jq -r '.segments[].text' "${base}.json" | \
            curl "https://api.groq.com/openai/v1/chat/completions" \
              -H "Authorization: Bearer ${{ secrets.GROQ_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d @- <<'EOF' \
              > "${base}_en.json"
              {
                "model": "gpt-oss-20b",
                "messages": [
                  {"role": "system", "content": "You are a translator. Translate Japanese subtitles to English with natural phrasing, keep timing."},
                  {"role": "user", "content": "Translate this SRT block by block"}
                ],
                "response_format": "verbose_json"
              }
         EOF

            echo "📄 Convert translation → SRT..."
            python3 transcribe.py "${base}_en.json" "subs/${base}.en.srt"

            echo "🎬 Hardcode EN subtitle on video..."
            ffmpeg -i "$fname" -vf "subtitles=subs/${base}.en.srt:force_style='Alignment=6'" \
              -c:a copy "outputs/${base}_sub.mp4"

          done < video.txt

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: auto-subs
          name: Auto Subtitle Release
          files: outputs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
